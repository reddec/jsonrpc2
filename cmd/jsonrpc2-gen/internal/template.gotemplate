# {{.Service.Name}}

{{.Service.Comment}}

{{range $index, $method := .UsedMethods}}
* [{{$.Generator.Qual $method}}](#{{$.Generator.Qual $method | lower | replace "." "" | snakecase}}) - {{$method.Comment | firstLine}}
{{- end}}

{{range $index, $method := .UsedMethods}}

## {{$.Generator.Qual $method}}

{{$method.Comment}}

* Method: `{{$.Generator.Qual $method}}`
* Returns: `{{$method.ReturnType}}`
{{with $method.Args}}
* Arguments:

| Position | Name | Type |
|----------|------|------|
{{- range $index, $arg := .}}
| {{$index}} | {{$arg.Name}} | `{{$arg.Ops}}{{$arg.Type}}` |
{{- end}}
{{end}}
{{- if $.DocAddr}}
```bash
curl -H 'Content-Type: application/json' --data-binary @- "{{$.DocAddr}}" <<EOF
{
    "jsonrpc" : "2.0",
    "id" : 1,
    "method" : "{{$.Generator.Qual $method}}",
    "params" : []
}
EOF
```
{{- end}}

{{- range $index, $localType := $method.LocalTypes $.Import}}
### {{$localType.Type}}
```go
type {{$localType.Definition}}
```
{{- end}}


{{- end}}