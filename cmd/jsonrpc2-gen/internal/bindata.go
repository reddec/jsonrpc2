// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package internal generated by go-bindata.// sources:
// template.gotemplate
// python.gotemplate
// js.gotemplate
// ts.gotemplate
// method_doc.gotemplate
// ktor.gotemplate
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x5d\x4f\xdc\x30\x10\x7c\xf7\xaf\x18\xe5\x4e\xa2\x45\x24\xfd\x78\x3c\x81\x54\x04\xa5\xa5\xa2\xa5\x2d\xf4\x09\x21\xc5\x24\x26\xe7\x36\xe7\x44\xb6\xaf\x14\xd9\xfe\xef\xd5\xda\xc9\x1d\x77\x05\xa4\xe6\x25\xf6\x78\x67\xbd\x3b\xb3\x9e\xc0\xb9\xe2\x42\xe8\xdf\xb2\x12\xc5\x17\xbe\x10\x21\x30\xf6\x00\x3a\xea\x16\x0b\xa1\x6c\x42\x35\x57\x8d\xc0\x54\xaa\x5a\xfc\xd9\xc3\x74\x21\xec\xbc\xab\x31\x3b\x40\xf1\xc3\x88\xfa\x73\xdc\x9a\x10\xd8\x2e\xae\x9c\x9b\x16\x1f\x84\x12\x9a\xdb\x4e\x17\xdf\x96\xbc\x1d\xe3\x43\xb8\x7e\x31\x79\xfa\x18\x1e\x6d\x77\x27\x34\x3c\xb4\xe8\x5b\x5e\x09\x64\x45\x86\x2c\x83\x87\x51\xfc\x97\xa8\xb8\x11\x21\xbc\x44\x0e\xe7\x06\xce\x58\x25\x3c\x6e\xa5\x36\xf6\x4c\x2a\xea\xc3\xb9\x1c\x42\xd5\xff\x57\x3b\x9b\x90\x24\x4f\x17\x4f\xb9\xb6\xae\x25\x70\x17\x29\xc5\x0c\xe5\x73\xec\x92\xed\xe2\xbb\xb0\x4b\xad\x4c\x8a\x1c\x32\x25\xec\xf2\xbe\x17\x14\xe3\xdc\x9d\xb4\xf3\x91\x55\x1c\xea\x26\xa9\x7a\xa8\x9b\x25\x5d\x68\x66\x8c\x79\x7c\xed\x8c\xb4\xb2\x53\xf0\x20\xe3\xe0\x41\x7c\x78\xe6\xf3\xd5\xe7\x37\x7f\x51\x92\x2d\x25\xb8\x6e\xa2\x0c\x21\x30\x4f\x9d\x47\x3c\x04\xc4\x0d\xd7\xcd\x30\x15\xf0\xb1\x5e\x02\xce\x7b\x13\xc2\xb0\x1e\x4a\x86\x7f\xa0\xb6\x73\xe3\x3f\x87\xbc\xc5\xb4\x38\xee\xaa\xc3\xba\xd6\x21\xb0\xb2\x2c\x6f\xb8\x99\xb3\x6a\xa9\x5b\xe4\x1f\xb1\x73\xd4\x29\x2b\x94\xcd\x29\xcf\x0c\xbc\xef\x5b\x59\x71\xea\xea\xd5\x4f\xd3\xa9\x1d\xe4\x79\xcd\x2d\xcf\x6f\xa4\xe2\xfa\x1e\xef\x72\x64\x24\xef\x2a\x61\x86\xfd\xfd\xf7\xe7\x27\xcc\x31\x00\xc8\x88\xa3\xfb\x2a\xc3\x0c\xd9\xdb\xe2\x75\xb6\x97\x60\x59\x13\xf2\x66\xd8\x25\x55\x63\xcc\x73\x56\x8d\xe4\x9e\x6b\xbe\x30\x14\x7e\x75\xcd\x02\xa3\xdb\xca\xb2\xdc\x1c\xae\x7f\x44\x6d\xbb\x8a\xb7\xd1\x8e\xd9\xc1\xca\xc7\xb3\x11\x34\x98\x16\xa7\x8b\xbe\xd3\x34\x3a\x93\x34\x70\x2b\xc6\x20\x29\x73\x8e\xb4\x5b\xc3\xa7\xe6\xc2\xea\x65\x65\xa3\x4f\x9f\x4c\xf4\x3d\x19\x8e\xd5\xf8\x33\xff\x98\xed\xdb\xce\xaf\x73\xa6\x8c\x27\x52\xb4\x71\xf6\xc9\xf2\xe2\x92\x37\xa3\xdb\x6b\x77\xe9\xe0\x91\x47\x06\x8a\xdc\x70\x3e\x87\x68\xe9\x7d\x92\x46\x4d\xc7\x2c\x15\xb8\xd1\xdd\xb1\xb8\x95\x2a\xce\x6d\x0a\xda\x66\x27\x49\xd7\xeb\xbf\x01\x00\x00\xff\xff\x1d\x67\xdc\x81\xa1\x04\x00\x00")

func templateGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_templateGotemplate,
		"template.gotemplate",
	)
}

func templateGotemplate() (*asset, error) {
	bytes, err := templateGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template.gotemplate", size: 1185, mode: os.FileMode(420), modTime: time.Unix(1584625238, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pythonGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\xdd\x6e\xdc\xb6\x12\xbe\xdf\xa7\x18\xe8\x04\x90\x04\x6f\x14\x27\x97\xc2\xd1\x41\x72\xd2\xa4\x57\x4d\xda\x38\xed\xcd\x62\xb1\xa0\x25\xee\x9a\x8d\x44\xa9\x24\xe5\x78\xa3\xf0\xdd\x8b\xe1\x8f\xfe\x56\xeb\x38\x69\x83\x76\x01\x1b\x12\x39\x33\x1c\x7e\x33\xf3\xcd\x68\x2f\xea\x0a\x08\xab\x6f\x94\x6a\x80\x55\x4d\x2d\x14\xe4\x25\xa3\x5c\xad\xba\xee\x23\x53\x37\x50\xd0\x3d\xe3\x4c\xb1\x9a\x4b\xad\x57\x46\xbe\x20\x8a\xe4\x25\x91\x92\x4a\xaf\xd3\x2f\xad\xba\xee\x31\x50\x5e\x68\xed\x0d\x50\xde\x56\xbd\x2a\xbe\x78\x9d\x57\xbc\xad\x46\xe2\xff\x71\xeb\x68\x42\x10\x7e\xa0\xbd\xe6\xca\x58\x86\xae\x4b\xde\x1f\x1b\xfa\x86\x54\x54\xeb\x08\xb5\xe3\x74\x05\x00\x80\x36\xac\x46\xf2\x9a\xf1\x02\x77\x7e\x23\x65\x4b\x51\xd7\xee\x27\xa8\x04\x9f\x41\x72\xf2\x81\xe6\x44\xe2\x73\xdb\x34\x54\x68\x0d\x19\xee\x1b\xf9\x5e\xdc\xbb\x64\x5e\x0b\xba\x07\x55\xef\x7e\x97\x35\x8f\x24\x2d\xf7\x31\x3c\xfe\x1f\xaa\xc0\x67\x68\x8e\xea\xa6\xe6\x5a\x5b\x37\xf0\x27\xa8\x6a\x05\x07\x94\x4b\x6e\xd1\xa6\xb5\xf1\x5c\x2a\xa2\x58\x5e\x51\x75\x53\x17\xbd\x55\x44\xc4\xda\x6d\xc8\xb1\xac\x49\x91\xce\xec\x9a\xa3\xc2\xc9\xbd\xc3\x93\xb3\xa6\xb0\x38\x4b\xf1\xaa\xeb\x7c\x14\x2c\x34\xd3\x38\xae\x9e\x0f\x11\x5b\x40\x37\x5d\x8d\x30\xbd\x52\xa2\xcd\xd5\x6b\x46\xcb\xe2\x7e\x44\xa9\xcc\x49\x83\xda\xc6\xe7\xd1\x3d\xc2\xd5\x43\x30\x2d\x58\xae\x4e\x6f\x37\x8f\xf0\x82\x37\xfe\x17\xe0\x1d\xc8\x41\xeb\x00\x81\x74\xf6\x21\x81\xa8\x11\x8c\x2b\x08\x4c\x54\x02\x88\xce\xfb\x1e\x43\xac\xf5\x7a\x96\x05\xde\xbc\xfe\xca\x58\xe2\x7d\xbe\x21\x82\x5f\x80\x7e\xfc\xbb\x3f\x0c\x59\xd7\xf5\x5e\x8d\x50\x70\xfe\x6d\xc2\x00\x10\x2d\x08\xc2\x6d\x60\xaf\x7d\x7a\xe5\x21\x8d\x86\x2c\xb9\xa2\xe2\x96\xe5\x34\xb1\xee\xbe\x12\xa2\x16\xd1\xbb\x96\x2b\x56\x51\xf3\xe2\x8a\x12\x41\xd9\xed\x30\xe5\x76\x3b\x13\xe3\x35\x58\xc8\x52\x90\x4a\xac\x21\xaf\x0b\x9a\x02\xe3\x0a\xd7\xa5\x24\x07\xea\x36\x30\x31\x53\x78\xc1\x8f\xf1\x00\x94\x6c\x1b\x2a\xa2\x38\xe9\x0d\x86\x9d\x4e\xc1\xfe\xc1\x63\xe8\x74\x98\xec\x6b\x51\x11\x15\xd9\x33\xac\xf9\xde\xb2\x35\x1a\xc7\x83\x3d\xcc\x04\x14\x81\xcc\x48\x4e\x37\x9c\x16\x64\x5e\x7f\xba\x8d\xb6\x20\x33\x26\x1f\x96\x11\x93\x7b\x2f\xa7\xc7\x02\xa8\x8b\x79\xb2\x04\xfe\x24\x2d\xec\x59\x99\x83\x61\xb2\x85\x17\xcd\xfa\xe8\xe3\x5b\xb8\x5d\xcf\x94\xcd\x75\x07\x21\xb7\x30\x97\xc3\xab\x7b\xa1\xe4\x40\x55\x14\xe2\x4a\x18\x8f\xf2\xe6\x6c\xc2\xbc\x34\xdd\xc5\xde\x2d\x08\x02\x4f\x27\x5e\xe8\x65\x5d\x55\x94\x2b\x97\x83\x28\x70\x2e\x9b\xae\x89\xa4\xbb\x56\x94\x06\x57\xc8\x0c\x8c\x3f\xd4\xf9\x8b\xa2\x10\x5a\x87\x6b\x90\x54\x4a\x56\xf3\x14\xde\x36\xc8\x7a\xa4\xdc\xd8\xc6\x96\x58\x0f\xae\xec\xf6\x16\x32\x78\x53\x73\x3a\x4e\x36\x0c\xf2\x0e\x4d\x43\xd6\x9f\x32\xdf\x65\x05\x64\xf0\x74\xbe\x2a\xe8\x1f\x2d\x95\x0a\x32\x7f\x7a\xe2\x57\xd8\xde\x2f\x01\x93\xc0\x6b\x65\x4e\x05\x5a\x4a\xea\x1a\xae\x17\x1d\x5f\x98\xd3\x3b\xb5\x63\x85\xe5\xc8\x13\x0f\x59\x01\x17\x63\x27\xc6\xcd\x07\x77\x7b\xee\x7f\xc4\x78\x41\xef\xd6\xf0\xc8\xa6\x05\xa4\x19\x24\xbf\x4a\x5a\xfc\x64\x5e\x3d\xb3\x10\x79\xe4\xb9\x39\xb8\xeb\x9c\xe4\x09\xbd\x68\x6d\x7c\x19\x28\xaa\x37\x4d\xc4\x01\xed\x7a\xc5\x17\xe2\x20\xb5\x5e\xa3\x29\x22\x0e\x0b\x76\x52\xb7\x35\x6a\x13\x8e\x6b\x5c\x83\xf5\x96\xde\xd9\x5b\x2d\x75\x5b\x9f\x3f\x36\x87\xbc\xc2\x34\x85\xe6\x72\x82\xca\xa6\xe6\x12\xab\x9b\x7c\x24\x4c\x39\xb8\x18\xbf\xad\x3f\xd0\xa8\x9b\x36\x14\x2c\x5f\xd1\xe4\x41\x0a\xc1\xb3\xe4\x32\x98\x56\x41\x60\xcf\xc3\xcd\xae\x7b\x94\xfc\x48\x39\x15\x44\xd5\x22\xf9\xa5\x25\xa5\x07\x42\xeb\xb9\x16\x43\x0d\x17\x23\x1f\xdf\x78\x26\xd3\x10\x41\x2a\x19\xa4\xb0\x79\x28\xd2\xe3\x7e\x07\xd1\x22\xe6\xb1\x8d\x87\xc1\x78\x3b\x74\xb5\xa1\x6a\x71\xa2\x13\xaa\x47\x28\x41\x5a\x6b\x25\x3c\x79\x02\x4f\x2f\x2f\x21\xcb\xe0\xd9\x1a\x6b\x2d\x9a\x09\xc4\x70\x01\x01\x04\x70\x31\xdd\x14\x94\xc8\x9a\x0f\xd6\x1d\x5f\xf4\xb8\xf7\x82\x86\x23\x07\x39\xb6\x87\x90\x1a\x02\x04\xc6\x7b\xba\x9c\xe0\x23\x08\x93\x14\x23\xbe\xc4\x87\xc9\x40\xbc\xe1\x7d\x89\x1c\xf6\x5c\xbc\x71\xe7\x6d\xe3\x53\xc6\x1d\x3a\xe8\x2c\x1f\x87\x3e\x2a\xa8\x6c\x4b\x15\x6e\x03\x33\x6d\x0d\x0d\x74\xa8\x27\x9f\x5d\x96\xb8\x5c\x9d\xc7\x27\xfc\x3e\xce\x47\x4f\x25\x51\xf8\xf3\xdb\xab\xf7\x86\xce\x3c\x2b\xad\x01\xfd\xc9\xbc\x99\xf3\x54\xfb\x7f\xa2\xf2\x9b\xbf\x81\x69\x2d\x3f\xa5\xe7\xb8\x7c\x0d\x92\x7d\xb2\xbd\x1c\x39\xf1\x72\x91\xa8\x16\xc8\xd2\x9a\xc5\x0e\x6c\x3f\x38\x96\xb9\x54\x42\x06\x9b\xed\x7c\xf3\x1a\xaf\x86\xa3\xbb\x5e\xdc\xd9\xa1\x47\xc8\xc2\xec\x13\xfd\xc7\xf8\xf4\x5f\xc0\xa4\x7f\x8d\x2a\x2d\x0b\x21\xfe\xdf\x9d\x85\x1c\x90\xd9\x17\xa8\x74\x1e\x31\x52\x14\x7d\xa1\xf8\xc9\xcf\x7a\xbd\x86\x92\x54\xd7\x05\x81\xd1\xa7\xd5\x17\x6b\x39\xd0\x3a\x9e\x94\xb0\xcd\x9a\xf1\x29\x0b\x93\xac\x3f\x70\x4f\x72\x55\x8b\xe3\xa4\xae\x8d\x92\xcd\xff\x39\xe5\xcf\xa5\x30\x9b\xbf\xa9\xfb\x2c\xcd\x7a\xb6\xcb\x0c\xe7\x9f\xeb\x2f\xf6\x61\xf4\x89\x73\xa6\x08\x13\xd2\x34\x94\x17\x51\x4f\x3a\x4b\x55\xb7\x19\xce\xc3\xb1\xca\x0b\x0f\xc8\xac\xe6\xbc\xb8\x23\x94\x2b\x2a\x1c\xd3\x9c\x56\xe4\x42\x99\x8f\x8a\x72\xc9\xdc\xdd\x88\xb7\xe8\x5d\xbe\x53\xc7\x86\xda\xa7\x5b\x52\xba\xa5\xeb\xd1\x41\x03\xe7\x46\x0b\xee\xe5\xa4\x2c\xbd\x73\x38\x95\x94\x4c\x8e\x3e\x51\xeb\xfd\x5e\x52\x8c\xdb\x65\xbf\xc4\xdb\x0a\x32\x28\xa9\xfd\xac\x1d\x01\x38\x0e\x37\xb6\x8b\x19\xad\x7d\xbc\x61\x25\xf5\x06\xff\x8b\x66\xa6\x1d\xcf\x64\x4d\x7f\x9e\x7b\xb8\x38\xe5\xbc\x89\x92\x47\x6f\xe6\xca\xc6\xaa\xa7\x15\xe3\x11\x6f\xab\xf5\xd8\x78\xbc\x9d\x58\xe8\x4f\x1c\x89\xac\xa6\xad\xd8\x75\x71\x39\x9b\xa7\x76\x4d\x2d\x95\x75\x2c\x32\xff\xe3\xb9\x9a\x03\xc1\x3f\x5d\x0c\xa6\x56\x0f\x67\xfb\xe5\x26\xe1\x72\xc4\x99\x3e\x0d\xeb\xc8\x37\xff\x2d\x81\x9d\xd2\x84\x77\x21\xce\x67\x46\x46\xd7\xc0\xfa\xd9\x71\x76\xcd\xef\x3b\x4d\x0d\x00\xde\x3f\x4d\x11\x3e\xc3\x66\x5f\x8b\x7e\x14\x63\x3d\x46\xb3\xf9\x6a\x56\xb8\x43\x0e\xd9\x3a\xef\x47\x1f\x56\x84\xdb\x69\xc6\x3c\x60\x7a\x83\xaf\x98\xe0\x9c\x27\xf8\x25\x8a\x24\x17\x6e\xef\x1b\xda\xf0\x87\x1f\x54\xa7\xc7\x11\xde\x33\x98\xbb\x52\x74\x32\xbe\xc5\x27\xd3\x1f\xe1\xf2\xcf\x00\x00\x00\xff\xff\xeb\xf5\x36\xe4\x20\x15\x00\x00")

func pythonGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_pythonGotemplate,
		"python.gotemplate",
	)
}

func pythonGotemplate() (*asset, error) {
	bytes, err := pythonGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "python.gotemplate", size: 5408, mode: os.FileMode(420), modTime: time.Unix(1588837716, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4d\x6f\xdb\x38\x10\xbd\xeb\x57\xcc\x1a\x01\x24\x39\x8e\x9c\xdd\xa3\x03\x1f\x82\xec\x62\x3f\x80\x4d\x5c\x24\x3d\x15\x45\xc0\x88\x63\x9b\xad\x4c\xaa\x43\x2a\xb1\xa1\xf2\xbf\x17\xa4\x28\xeb\xc3\x4e\x6f\xd5\x45\x10\xe7\xbd\x99\xa7\xc7\xe1\x10\xf7\xa5\x22\x03\x79\xc1\xb4\x86\xba\xce\x1e\x91\x5e\x45\x8e\xd9\x3d\xdb\xa1\xb5\x7f\x11\x29\x02\xdc\x1b\x94\x5c\x43\xf3\x55\x47\x00\x00\xb9\x92\xda\x50\x95\x1b\x45\xc9\x0e\xb5\x66\x1b\x9c\x41\xae\x38\xce\x80\xa3\x61\xa2\xd0\x69\x40\xba\x47\x57\x25\x52\xe2\xc2\x70\x09\xf1\x02\x62\xb8\x84\xc0\x4a\x6f\x8e\x28\xb3\x15\x3a\xf3\xa0\xa5\x4f\x35\x8a\x84\xbc\xb0\x6c\x2b\x34\x71\x1b\xd9\x28\xfa\xf9\x6f\x04\x25\xf3\xe9\xd4\xbf\x7b\xf1\x3b\xb5\xdb\xa1\x34\xd6\xfa\xc0\x74\x3a\x8f\x1a\xe4\x1c\xee\x08\x99\x41\x90\xf8\x06\xb7\xab\x7f\x61\xcb\x24\x2f\x90\xc0\xa8\xd3\xf4\x59\xcb\x29\x09\xd7\x85\xd8\x6c\xcd\x3f\x01\x9d\x88\x35\x70\x5c\x0b\x89\x3c\x85\x9c\x49\x20\x34\x15\x49\x28\x49\xed\x84\xc6\x13\x27\x5f\x98\xc6\xe7\x8a\x0a\x58\x42\x5c\xd7\xd9\x9f\x2a\xbf\xe5\x9c\xac\x8d\x67\xa7\xb9\x97\x20\xab\xa2\xe8\xbb\xec\x5d\x7a\x0e\xfc\x36\xd5\xcd\x38\x2c\x38\x2c\xe1\xf7\x93\xe5\x33\xf9\xc7\x4b\xad\xdf\x51\x5d\x13\x93\x1b\x84\x0b\x21\x39\xee\x67\x70\xb1\x43\xb3\x55\x1c\x16\x4b\xc8\x3e\x6a\xe4\xff\xfb\x4f\x1d\x5c\xed\x6c\x0f\xb8\x33\xae\xbb\x37\xd3\x07\x99\xf7\x50\xce\x5c\xf8\x0e\x95\x34\xc2\x14\x68\x6d\x52\xd7\x57\x30\x2a\xcc\x68\xe3\xaa\xb6\x94\x5b\xda\x68\x6b\xeb\x5a\xac\x61\x63\x02\x0a\xae\xad\x9d\x41\x5d\xa3\xe4\x2e\xe4\x28\x61\xdf\xc2\x5a\xda\x39\x18\xb6\x27\x61\x6f\x4c\x98\xd6\x99\x9c\x15\x45\x12\x0f\x75\xf9\x2d\xe9\x78\xee\x99\x7c\xd1\x4a\x52\x99\x4f\x60\x01\x93\x3f\xb2\xeb\xc9\x6c\x18\x6e\xd8\x3e\x5a\xd7\x17\xd9\xdf\x28\x91\x98\x51\x94\x7d\xa8\x58\xd1\xfe\x81\xb5\x63\x9a\xf0\x94\x20\x45\xe2\xde\x3c\x0b\x9e\xa4\x23\x50\xc9\x88\xed\xb4\x03\x7e\xfa\x45\x26\x7d\x3e\x16\xb4\x69\xda\x36\x42\x88\x45\xcd\xa1\xe9\xc9\x3b\x6d\x4a\xc1\xe1\x72\xd0\x76\xc1\xea\x63\xb8\xed\xad\xae\x13\x82\xf3\x8d\xea\x19\x10\x7e\xeb\xe7\xf5\xc7\x06\xd6\x68\xf2\xed\xca\xff\x3d\x2c\x47\x1b\xd2\x10\x17\x30\x59\x3d\x3c\x3e\x8d\x6c\xdd\x22\xe3\x48\x7a\x31\xa2\xb8\x27\xbe\x53\xd2\xa0\x34\x57\x4f\x87\x12\x63\x58\x40\xcc\xca\xb2\x10\x39\x33\x42\xc9\xb9\xdb\xe4\x78\x98\xcb\x0e\x3f\x5f\x14\x3f\x2c\xe0\xbf\xc7\x87\xfb\x4c\x1b\x12\x72\x23\xd6\x87\xc4\x89\xef\x1c\xec\x5c\x10\x6b\x48\xde\x39\x80\xe9\x48\x5b\xd3\x93\xab\x66\x72\x64\x84\x5a\x15\xaf\xf8\x1e\xf9\xe8\x5a\xcf\xa0\xb4\x37\x6a\xed\xc8\x47\x42\xe7\x5f\x53\xc2\x53\x92\x6e\x98\x0c\x93\x0c\xb5\xff\x46\xa8\x33\xf5\x75\xac\xd5\x6c\x49\xbd\xf9\xd9\xe9\xef\x8c\xc4\xa1\xb4\x61\xa6\xd2\x6e\xfe\xfb\xf1\xdf\x2d\x3d\xe1\xde\x0c\xa4\x8d\xb4\x71\x66\xd8\x51\x9c\xa3\xb9\x3d\x48\xd2\x9b\x68\xa0\x24\x46\x57\x29\x06\x21\x3d\xe1\x7d\x45\xe7\x2f\xb9\xc4\x91\x32\x9f\x23\x3b\xde\x67\xbd\xb5\x70\xb5\x75\x0b\xbe\xc8\x59\xd5\xa1\xb3\x3d\x96\x50\x57\x85\x39\x5e\x54\x3f\x02\x00\x00\xff\xff\xf5\x5c\xbf\xbd\x6e\x07\x00\x00")

func jsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_jsGotemplate,
		"js.gotemplate",
	)
}

func jsGotemplate() (*asset, error) {
	bytes, err := jsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js.gotemplate", size: 1902, mode: os.FileMode(420), modTime: time.Unix(1586348282, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x5f\x6f\xdc\xb8\x11\x7f\xdf\x4f\x31\x5d\x04\xb0\x94\x6c\x64\xb7\x8f\x72\xd6\x41\x10\x24\xc5\x15\xbd\x5c\x7a\xce\xf5\x1e\x0c\xc3\x47\x8b\xa3\x5d\x9e\xb5\xa4\x8e\xa4\x6c\x2f\x14\x7d\xf7\x82\x7f\x24\x51\x94\x9c\x04\xd7\x00\xad\x5f\xac\x25\x87\xf3\xf7\x37\xc3\x19\xe2\x63\x2d\xa4\x86\xa2\x22\x4a\x41\xdb\x66\x97\x28\xef\x59\x81\xd9\x07\x72\xc0\xae\x7b\x27\xa5\x90\x80\x8f\x1a\x39\x55\xe0\x7e\xb5\x2b\x00\x80\xba\xb9\xad\x58\x01\x12\x09\x15\xbc\x3a\x42\x21\x28\xe6\xc0\x9b\xc3\x2d\xca\xf3\x45\x0a\x8a\x9a\xb0\x4a\xe5\x40\xf8\xf1\x7c\x65\x49\x0a\xc1\x95\x96\x4d\xa1\x85\x4c\x0e\xa8\x14\xd9\x61\x0e\x4a\x4b\xc6\x77\x9b\x09\xc7\xcd\xe4\x74\xea\x75\x30\x7f\xaa\xa9\x51\x26\x86\x16\x5e\xc0\x49\x0e\x27\xf0\x02\x3c\xab\xf4\x7c\xa0\xd2\x7b\xa6\x32\x4b\xb4\xb5\x7c\xa3\x1d\xcf\x1c\xb6\xbd\x18\xb7\xdf\xad\xba\xd5\xaa\x6d\x25\xe1\x3b\x04\x8a\x25\xe3\x4c\x33\xc1\x55\xd7\xad\xda\xf6\x25\x3c\x30\xbd\x87\x0c\x3e\x83\xda\xb3\x43\xd7\xad\xbc\x2b\xdb\x36\x7b\x2b\xb8\x46\xae\x3d\x1d\x56\x0a\xc7\x6d\xc6\x35\xca\x92\x14\x68\x08\x3f\x1d\x6b\x74\x9e\xf6\x26\x19\x7a\x27\x2f\xbb\xb4\x9e\x79\xcf\xb0\xa2\x46\xa2\xdb\xcd\x3e\x91\x5d\xd7\xe5\xe6\x0b\x3e\x83\x3e\xd6\xa8\x0a\xc9\x6a\x3d\x10\xbc\x04\xe4\xb4\x33\x9a\x8f\xdf\x6d\xeb\xfe\x0f\xb6\x20\x6f\x0e\xff\x9d\x15\x86\xc3\xd7\x0c\x78\xcf\x38\x7d\xc7\x9b\xc3\xbf\x49\xd5\x60\x60\x82\xa7\xdf\x9a\x6f\xbb\xd7\x75\x9b\x6f\xd1\xfe\xf4\xd4\x44\xdb\x8a\x57\xba\x29\xcb\xd5\x6a\x35\x3a\x53\xd6\xc5\xbb\x47\x2c\x1a\x3d\x20\xb4\x20\x55\x95\x30\x3a\x42\xa8\x26\xc7\x4a\x10\xda\x23\x2c\xcd\xe1\xa3\x14\x07\xa6\xf0\x95\xb8\xfd\x1d\x0b\x7d\x71\x6e\xe2\xed\x32\xe1\x41\x45\xdc\x6a\xc9\xee\x89\x46\x50\xa2\xb8\x43\xfd\x3a\x87\x5f\xf1\xf6\xd2\x7e\x9f\x4f\xf6\x0b\xc1\x39\x16\x9a\xf1\x1d\x6c\xa1\x24\x95\xc2\xe9\xfe\x90\x0e\x35\x72\xca\xf8\xee\xad\xa7\x17\x3c\x87\x37\x52\x92\xe3\xab\x24\x85\xed\x05\x24\xf7\x82\xd1\xf4\x02\xb6\x70\x75\xfd\x04\x87\x42\x48\x89\x15\x31\x67\x61\x0b\x1c\x1f\xe0\x47\x52\xbf\xea\xad\xbd\x4a\x28\xd1\x24\x07\x67\x9b\xe5\x69\x58\x6e\x20\x41\x29\x67\xcb\xd7\x17\x49\xba\x90\x94\x33\x99\x8d\xac\x06\xff\x79\xcf\x74\xee\x18\x51\x47\x5e\xfc\x09\xa7\x07\xb9\x6c\x25\x5b\x0f\xc2\x16\xc8\x03\x61\xba\x4f\x5c\xeb\xa3\x1f\xca\x0f\x88\x14\x69\x12\x24\x36\x2b\x21\xf1\x34\x83\x33\xb2\x3d\x51\x09\xa3\x69\x58\x26\x5c\xaa\x4b\xf1\x60\xfd\x64\x0b\x59\xf2\x1b\xa9\x8c\x5d\x47\xc0\x47\xa6\xb4\xea\x23\x02\x12\xff\x68\x50\x69\x97\x19\x8c\xc2\xb3\x96\xd1\xee\xb7\x40\x68\x37\x7c\x55\xa8\xa1\x6c\x74\x23\xd1\x47\x20\x32\x2e\x49\x24\x2a\x51\xdd\xe3\x06\x24\x0e\x0e\x8f\xd5\x8a\xd4\x57\xa8\x13\x13\xa8\xab\xe8\xec\x75\xa8\x42\xf0\x6d\xdc\x93\x29\xe4\x34\xf1\xce\x0e\xf6\x24\xea\x46\x72\x48\x9c\x37\x9d\xaa\xe9\x79\x18\xb7\x3e\xc4\x3e\x7e\xb1\xab\xc7\x78\x0d\x80\x0f\x0d\x78\xd8\xb3\x0a\x87\x10\xf4\xd0\x8f\x3d\xef\xa4\x07\xfe\x19\xfc\x32\x77\xc7\xe0\x92\x59\x82\x64\x75\xa3\xf6\xfd\xc1\xc0\x46\xe7\x8f\x74\x21\x3c\x03\x3a\x5c\xd6\xc6\x6a\x79\xe7\x04\x14\x4b\x31\x8e\x6c\x83\x2d\x68\xd9\x04\x37\x88\xc1\x40\x7c\x5a\xcb\x63\x24\xcb\x51\x2c\xe2\x3a\xc4\x73\x07\x25\xe3\xa4\xaa\xe2\xe3\x73\x25\x82\xda\x32\xd5\xd7\x49\xca\x04\x47\x7b\x5d\x6f\x21\x79\x0a\x74\x82\x8f\xce\x7d\x4f\x58\x35\x4d\xad\x05\x8e\x45\x25\x14\x7e\x57\x8e\xfe\xaa\x36\x3c\x5b\x53\xaf\xba\x05\xce\xc6\xc1\x12\xd5\x34\xe0\x73\x0f\xbb\x88\x9a\x4b\xfc\x1f\x97\x3f\x7d\xc8\x6a\x22\x15\xda\x1a\x18\x43\x05\x0a\xa2\x8b\x3d\x24\x18\xe3\x01\x7c\x0d\x12\x15\x66\xd6\x79\xc9\xba\xb4\x46\x80\x65\xd6\x17\x86\x7c\xbd\x81\x19\xfe\x56\x31\x13\x0d\x9a\xa8\x3b\x83\x96\x38\xbf\x77\xa8\x0d\x8a\x33\x46\x23\x26\x16\xae\x44\xdd\x2d\xe9\x35\xe3\x42\xb1\x42\x8d\xcb\x8c\xec\x01\xa2\xee\xae\xce\xae\x0d\xc1\x93\xba\x46\x20\x1f\x30\xda\xc3\x79\x82\xf1\xa2\xee\x8d\x99\x65\x66\xd4\x4e\xcd\x33\x57\x55\xac\xc0\xe4\x6c\x03\x67\x61\xdd\xaa\xb3\x52\xc8\x77\xa4\xd8\x27\x49\x69\xe3\x5e\x26\xe9\xbc\x76\xcd\xd2\x33\x2a\x5c\x43\x16\x7d\xa5\x54\x79\x76\x61\x95\x1e\xe9\x92\x6f\xa9\xd4\x63\xa6\xfb\x6a\x3f\x9c\x77\x55\xa6\x91\x55\xe4\x6a\x0f\x5d\xc3\x97\xce\x73\x16\xc2\x4c\x10\x35\xf2\x27\x52\xcb\x69\x3f\x70\x99\x96\x9f\x88\x20\xf1\xa5\x2e\x0e\xf9\xb2\xd0\xa1\x44\xe0\x13\x62\x0d\x24\xff\xd2\xcb\x5e\xc2\xa5\x13\x6d\x1c\x96\xc4\x39\xf1\xcd\xaa\x77\xdf\xa4\xeb\x50\x7c\xfe\xaf\x74\x1d\xbe\xd2\xe5\x6b\x75\xa9\x22\x06\xaa\xf5\x90\xea\x53\x6b\x76\x91\x4c\xf2\xb2\xe1\x76\x0a\x41\x3a\x6d\x80\xcc\x7e\x6c\xaf\x59\xcb\xac\xcb\x96\x2b\xb0\xef\xb5\x4c\x4e\xdb\xb6\x33\x2b\xa5\x38\xcc\x5b\xa9\x7b\xdb\xbb\x4f\xd2\x72\x46\x53\x54\x48\x64\x32\x6d\x48\x94\x06\x94\xd2\xa7\x89\x6b\xb7\x4e\x8a\xc1\x11\x60\x15\xa3\x27\x4f\x14\x83\xe4\xea\x66\xec\x79\xe6\xb1\xee\x43\x28\xe5\xa4\x21\x4a\xc7\x99\xcd\xf5\xf0\xb5\x50\x3a\x9e\x09\xfe\xc7\xbd\x6d\x89\xba\xd8\x7f\x24\x92\x1c\xcc\x3d\x35\x35\xeb\x80\x7a\x2f\x68\x0e\xeb\x8f\x3f\x5d\x7e\x5a\x6f\x26\x7b\x7b\x24\x14\xa5\xca\x17\x40\x7d\xe2\xc7\xb4\x97\x66\x14\x33\x03\x30\xa9\xeb\x8a\x15\x36\x34\xa7\xbf\x2b\xc1\x4f\xa6\xac\xba\xe9\xcf\x5b\x41\x8f\x79\x6f\xc9\xe8\xcd\x38\x98\xee\x62\xf5\x5d\xa4\x31\x62\xa8\x78\x9b\xd0\xa8\xa8\x33\x37\xd9\x98\x89\x19\x36\xe3\x46\xdc\x50\x29\x4d\x74\xa3\xcc\x0c\x6f\x47\xf8\x71\xe9\x13\x3e\xea\x45\x04\xfb\x7a\xee\x74\x32\xf4\xc6\xd8\x24\x0d\x46\xf7\xd3\xe7\xcf\x57\xc1\x93\xc6\x5b\x71\x38\xb8\x79\xf6\xf9\xf3\xd3\xd5\x97\x1f\x3e\xa0\x9d\xa6\xf1\xcd\xcd\x18\xf8\xf3\x68\x07\x3d\xc6\xf2\x60\x06\x3d\x5f\xb9\xf3\xa7\xa7\xf0\x56\xa2\xa1\x33\xe6\xbe\xf9\xf8\x03\xec\x09\xa7\x15\x4a\xd0\x62\x2e\x35\x9b\x81\xf4\x96\x28\xbc\x69\x64\x05\x3d\xc8\x60\x0b\x27\x6d\x9b\xfd\xaa\xde\x50\x2a\xbb\xee\x24\x9d\x61\xac\x96\x42\x0b\x53\x27\x8d\xc4\x5f\x7e\xfe\xe7\xc0\x23\x4d\x33\xbb\x57\x88\x6a\xf4\xa7\x7a\x60\xb6\x19\xb2\x3b\x71\xa0\x0a\xa2\x10\xd6\x0f\x2a\x5f\xe7\x8b\xeb\x66\xe3\x89\x56\x65\x74\xcb\xd6\xe8\x31\xce\xd3\xa3\x3a\xf3\xe2\x7a\x2b\x91\xdc\x7d\xa9\xaf\xb2\x72\xf7\x5a\xd7\xcb\x1a\x99\x9d\x99\xb2\x14\x4b\xd2\x54\xfa\xeb\x8a\xfa\x6a\x15\x96\x8d\x3f\xab\x6c\xd4\x58\x19\xf4\xc0\x16\xfe\x3a\xdc\x10\xfd\x43\xcc\x33\xc6\x29\x3e\x6e\xe0\x99\x4b\x7e\xc8\xb7\x90\xfd\xa2\x90\xfe\x68\x7f\xf6\x6f\x26\x06\xc7\x60\xdf\x47\x3c\x5d\x00\x65\xb3\x6e\xe0\x0c\x43\x99\x1a\xa9\x0c\xa8\xe0\x33\x34\x5c\x33\x5d\x61\xd7\x25\xe3\xe3\xcc\x20\x98\xc8\x9d\x91\xda\x1f\x79\x23\x77\xaa\xeb\xda\x96\x95\xb0\xd3\x9e\x0a\xce\xba\x6e\x03\xfe\x19\xa6\x6d\xcd\x11\x8f\xd7\x1c\xdc\xcf\xe8\x29\xca\x93\x06\xf5\x70\xd4\xe9\x67\x97\xb5\xd3\x03\x0b\x6d\x5a\x12\xcc\x49\x37\x37\xb6\xf4\x4e\x03\xb8\x36\xe9\x2e\xeb\x62\x0d\x39\xac\xff\x96\x9d\x45\x15\x73\xed\xe4\xd9\xdd\xb6\x7d\x96\xfd\x1d\x39\x4a\xa2\x85\xcc\xfe\xd5\x90\xaa\xb7\xb7\xeb\xe2\x63\xcc\x1e\xf1\x62\x39\x3e\xea\x1b\x46\x93\x34\x22\xaa\x6d\xb1\x33\x84\x57\xdf\xdb\xa5\x7e\xed\x3a\xbc\xd8\x80\x28\xf8\x8a\x07\x7b\x64\x0d\x8f\x65\x30\x29\x51\x83\x21\x81\xa3\x47\x64\xbe\x18\xa0\x09\x51\xdb\x6d\xb6\x9f\x7e\x2c\xf0\x71\x91\xf8\x47\x0e\x2d\x84\x37\xa3\x8f\xcd\xf8\x98\xdb\x5f\x6e\xfd\x6f\xe7\xc1\xfe\x19\x0a\x3e\xfb\xb7\x2f\xc2\x8f\x17\x10\x02\xc7\x2e\xc4\x15\xce\x0c\x75\xd3\x49\x7a\x4c\xe2\xac\x57\x29\x63\x74\xe3\x26\x41\x27\x93\x95\x47\xb3\xec\xbd\x39\x89\xa7\xed\x82\x5f\x2f\x5d\xae\xf1\xa3\xf4\xc2\xb8\x18\x3c\x52\xcf\x76\x8d\xa2\xaf\xed\x93\xf5\x97\xae\x60\x89\xaa\xa9\xf4\xeb\x3c\x24\x0b\x9a\x60\x73\x91\x1a\x46\x6e\x24\x7d\xfa\x2e\x5d\x7e\xbc\x0f\x8e\x66\xde\x9a\x0d\x04\x6b\xc6\x80\xc9\x42\x34\x31\x07\x8a\x78\x60\x58\x5a\xa7\xf3\x70\xd7\xfe\x27\x00\x00\xff\xff\xc4\x8b\xeb\xa8\x46\x18\x00\x00")

func tsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_tsGotemplate,
		"ts.gotemplate",
	)
}

func tsGotemplate() (*asset, error) {
	bytes, err := tsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ts.gotemplate", size: 6214, mode: os.FileMode(420), modTime: time.Unix(1588666582, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _method_docGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x4d\x6e\x32\x31\x0c\x86\xf7\x39\x85\x25\x58\xa1\x8f\x1c\x00\xe9\x5b\xa0\x56\x45\x54\xf4\x9f\x03\x4c\x0a\x26\x44\xca\x24\x28\xc9\xa8\xad\x92\xdc\xbd\xca\xcf\xcc\x74\x50\x17\x65\x13\xfc\x8e\xfd\xda\x7e\x3c\x03\xef\xe7\x74\x23\xf5\x3b\x93\x74\x83\x0a\x0d\x73\xda\xd0\x97\x8e\x49\xa0\x0f\xe8\xce\xfa\x18\x23\x21\xde\xd7\x80\xde\xe8\xb6\x45\xe5\x92\xb8\x80\xa2\xad\xa0\xf9\x83\x49\x43\x16\xf0\x8a\xae\x33\xca\xe6\x82\xde\xb0\x68\xfb\xaf\x0b\xa6\x1c\xef\x3f\x84\x3b\xf7\x55\x74\x6d\xb8\x8d\x91\x2c\x60\x6d\x78\x97\xfa\xda\x15\x21\x01\x9e\xb5\x15\x4e\x68\x05\x01\x1e\x59\x8b\x10\x20\xd5\x43\x20\x61\x39\xfc\xc2\xf4\x21\xde\x2f\xc1\x30\xc5\x11\xe6\x42\x1d\xf1\xf3\x1f\xcc\x99\xe1\xb0\xfa\x0f\x34\x46\x12\x12\x87\xac\xc7\x08\x39\x60\x86\xd3\x64\x9e\xe3\xa6\x0a\x4f\x17\x1b\x63\xfd\x5f\x47\x86\x62\x8d\x2a\x81\xf2\xbe\xbc\xbf\x75\x93\xfa\xc0\x64\x9e\x33\xf5\xac\x0b\xee\x7a\xd1\xc2\x40\x70\xdb\x5e\xb4\x49\x84\x67\xb3\x7c\x9e\xa1\xb0\xb6\x24\xde\x8b\xd3\x0f\x3f\xba\xb5\x6f\xce\x74\x07\x97\xf7\xb8\xb7\x99\x4b\x01\x02\xf5\x5c\x23\x9a\xe9\x73\x4d\x66\xf4\x2c\x8e\x77\x02\xe5\xd1\x56\x3e\x74\xcf\x78\x4f\x63\xdc\x3e\x7d\x18\xba\xc0\x49\x18\xeb\x76\x42\x21\xa4\xcc\x09\x99\x25\xa0\xb4\x69\xfc\xa6\x69\xb8\x26\x2e\x0d\x38\xd9\xee\x16\x4f\x42\xe5\xbb\x96\xa4\xeb\xea\x42\xf6\x3b\x00\x00\xff\xff\xb0\x28\xe0\x93\xb2\x02\x00\x00")

func method_docGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_method_docGotemplate,
		"method_doc.gotemplate",
	)
}

func method_docGotemplate() (*asset, error) {
	bytes, err := method_docGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "method_doc.gotemplate", size: 690, mode: os.FileMode(420), modTime: time.Unix(1586438099, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ktorGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x51\x6f\xd3\x30\x10\x7e\xcf\xaf\x38\x4d\x3c\xc4\xa8\x8b\x78\x0e\x1a\x42\x62\x9b\x84\x26\x15\xa4\x0d\x78\xf6\xe2\x4b\xf1\x48\xec\xc8\x71\xca\x98\xe7\xff\x8e\xce\x76\x93\x34\x4d\xc1\x0f\xb5\x7d\xf7\xdd\xe7\xbb\xef\xae\x91\x6d\xa7\x8d\x85\x5f\xda\x36\x52\x3d\x17\x3d\x1a\xc9\x1b\xf9\xc2\xad\xd4\xaa\x78\x9b\xfd\xd3\xfd\xd4\x07\x4c\xe6\x9c\xe1\x6a\x87\xf0\x46\x60\xfd\x59\x09\x7c\xde\x84\x23\x94\x57\x20\xb0\x96\x4a\x12\xba\xf7\x3e\xfb\x78\x7f\x88\x7f\x6c\x30\x13\xdc\x72\xa8\x1a\xde\xf7\xe0\x1c\x05\x14\x0f\x7f\x3a\xdc\xf2\x16\xbd\xcf\x9d\xbb\x84\xc4\x2a\x13\x65\x2d\xb1\x11\x44\x1a\xb0\xf7\xd6\x0c\x95\xbd\x25\x1b\x51\x03\x00\x50\x8c\xac\x61\x67\x53\x0c\xbc\xf3\x7e\x43\x46\x54\x22\x41\x52\x06\xf4\x48\x7e\xe1\x5c\xe4\x2c\x1e\xf8\xce\xfb\x0b\x16\x10\x7b\x6e\x60\x74\x10\x0e\x5e\x61\x50\x56\xda\x06\xbd\x2f\x47\x17\xbc\x26\x51\xbc\x87\xab\x53\xeb\x35\xd6\x7c\x68\xec\x2c\xb1\x98\x03\x03\x17\x2c\x95\x6e\x3b\xae\xa4\x56\xa0\x1f\x9f\xb0\xb2\xc9\x4c\xab\x1e\x14\xc9\x46\xe1\x39\x8b\xdc\x0b\x6d\x62\xa2\x3e\xf3\x99\x73\x91\x76\xd6\x83\x83\x5a\xa8\x86\x96\xc4\xa2\xfd\x54\xfb\xe0\x1d\xb5\xa7\xdb\xfc\x81\x3d\x6f\x60\xcf\x9b\x01\xcb\x23\xef\xac\xe6\x43\x1d\x2b\x6d\x0a\x81\xf4\x72\x71\x2b\x95\xb8\x51\x43\xfb\x9d\x2c\x53\x93\x22\xa2\x18\x1b\x9d\xee\x01\xe5\x3d\xdb\x2c\x24\xa3\xdb\xb7\xed\xdd\xf6\xcb\x8f\x6d\xbe\x9a\xcd\xa8\x35\x7b\x9f\xcd\x9b\x2c\x5f\xd0\xe4\xb5\x36\x9f\x42\x99\x57\x2b\x85\x96\x65\x90\x80\xad\xb7\x84\xc0\x13\xd3\xac\x43\x7a\x8f\xc6\x48\x81\xa4\x11\x08\xec\x2b\x23\x3b\xab\x4d\x09\x11\x7d\x3d\x5a\xc6\x08\x5a\x3b\x8c\xfd\xfc\x6a\x64\x2b\xad\xdc\xe3\x84\x0b\xa3\xb8\xc8\xed\x62\x33\x21\xef\xa4\x12\xc5\x6a\xed\x34\x9c\x5d\x87\xc6\x7b\x96\x9d\xe6\x17\x47\xe9\xf0\xa7\xc5\x5c\x60\xa5\x05\x9a\x12\xae\xe3\x81\x95\x2b\xa2\xcc\x0a\xa5\x65\xd0\x0e\x46\xc1\xef\x9f\xa8\xe0\x40\x50\xc4\xfd\xcc\x6c\xe4\x8c\x2d\x38\xfe\x37\x29\x91\x66\x75\x5c\x8e\x29\x8e\x47\xa5\xb0\xfa\x6c\x0a\x70\xf9\x61\x39\x6a\xab\x29\x4d\x33\x36\x5f\xd8\xf4\x48\x0c\x69\xee\x8e\xfc\x13\xda\x9f\x91\x7c\x12\x1c\x55\x12\xfc\x26\x1e\x36\x6b\x7f\xab\x98\xdd\x42\xb3\x14\x59\xc4\xfd\x5c\x99\xb1\xbc\xf0\xcb\xd6\xd2\x5a\x7e\x4b\xe6\xf5\xf8\x6c\xfa\x80\xfc\x0d\x00\x00\xff\xff\x53\x84\xc7\xa6\x06\x06\x00\x00")

func ktorGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_ktorGotemplate,
		"ktor.gotemplate",
	)
}

func ktorGotemplate() (*asset, error) {
	bytes, err := ktorGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ktor.gotemplate", size: 1542, mode: os.FileMode(420), modTime: time.Unix(1588861771, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template.gotemplate":   templateGotemplate,
	"python.gotemplate":     pythonGotemplate,
	"js.gotemplate":         jsGotemplate,
	"ts.gotemplate":         tsGotemplate,
	"method_doc.gotemplate": method_docGotemplate,
	"ktor.gotemplate":       ktorGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"js.gotemplate":         &bintree{jsGotemplate, map[string]*bintree{}},
	"ktor.gotemplate":       &bintree{ktorGotemplate, map[string]*bintree{}},
	"method_doc.gotemplate": &bintree{method_docGotemplate, map[string]*bintree{}},
	"python.gotemplate":     &bintree{pythonGotemplate, map[string]*bintree{}},
	"template.gotemplate":   &bintree{templateGotemplate, map[string]*bintree{}},
	"ts.gotemplate":         &bintree{tsGotemplate, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
